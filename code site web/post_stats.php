<?php

/*Source : W3schools PHP lesson */
header("Content-Type: application/json; charset=UTF-8");

if(!(isset($db)))
	{
		define('MYHOST', 'tap_your_host_here');
		define('USERNAME','tap_your_username_here');
		define('DBNAME','tap_your_dbname_here');
		define('PASSWORD','tap_your_password_here');
		try
		{
			$db = new PDO("mysql:host=".MYHOST.";dbname=".DBNAME, USERNAME, PASSWORD);	// Connection to the selected database, change it to the database you're using
		}																				// Parameters : host (+ database), username, password 
		catch(Exception $e)
		{
			echo 'Échec de la connexion à la base de données<br/>';
			echo 'Error : '.$e->getMessage().'<br />';
			echo 'N° : '.$e->getCode();
			exit();
		}
	}
$response = array();	// will store the data needed for this chart in the right format (JSON, line 111) depending on the targeted chart
						// to be generated by Highcharts (our selected charts generator)
						
$obj = json_decode($_POST["envoi"], false);

$chart = test_input($obj->chart);			// Variables which store the different entries of the user after submitting the form 
$zone = test_input($obj->zone);
$date_d = test_input($obj->date_d);
$date_f = test_input($obj->date_f);

if (!(function_exists('test_input')))
{
	function test_input($data)				// Function that protects from SQL injections (Prepared queries are also used later on for safety) 
	{
		$data = trim($data);
		$data = stripslashes($data);
		$data = htmlspecialchars($data);
		return $data;	
	}
}

// For more information on the descriptions of the following SQL queries, see : https://www.data.gouv.fr/s/resources/base-de-donnees-accidents-corporels-de-la-circulation/20170915-155209/Description_des_bases_de_donnees_ONISR_-Annees_2005_a_2016.pdf 
// If not available or updated under another name (updated every year around September), here is the website : https://www.data.gouv.fr/fr/datasets/base-de-donnees-accidents-corporels-de-la-circulation/#_ 	
//For every chart, no need to specify the 'dep' column value in the second query since the selected area is the entire France (along with DOM-TOM)
// The data extracted from the database change depending on the parameters given by the user of the website : area and date interval   																								
	switch($chart)
	{
		case 'graphique_1' :			//Chart n°1 : Comparison between the number of accidents and the number of death on the road in France
					
								if ($zone != "1000")	//If the selected area is not the entire France country
								{																					//SQL query that selects the number of accidents by gravity number (with n°2 -> dead) 
									$result = $db->prepare("SELECT grav,COUNT(grav) FROM `usagers` u JOIN `caracteristiques` c 			
															ON u.num_u = c.num_c WHERE c.dep = ? and c.date_acc between ? and ?
															GROUP BY grav");
									$elements = array($zone,$date_d,$date_f);							//Create an array which stores 3 variables which themselves stores the data from the POST (after submitting the form)	
								}
									
								else					//If the selected area is France
								{
									$result = $db->prepare("SELECT grav,COUNT(grav) FROM `usagers` u JOIN `caracteristiques` c 
															ON u.num_u = c.num_c WHERE c.date_acc between ? and ?
															GROUP BY grav");
									$elements = array($date_d,$date_f);						//Create an array which stores 3 variables which themselves stores the data from the POST (after submitting the form)
																							//This time without the $zone variables => no need to specify the 'dep' column value in the second query since the selected area is 
								}															// the entire France (along with DOM-TOM)

								try
								{
									$result ->execute($elements);							// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)															// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
								$nb_accidents = 0;											// Variable that store the total number of accidents on the selected period
								$nb_morts = 0;												//Variable that store the total number of death on the selected period
								while($data = $result->fetch())								//Retrieve the data extracted from the database above line by line and do so until the last one 
								{
									switch($data['grav'])									//Counts the number of death and the number of accidents depending on the gravity number 
									{	
										case 2:		$nb_morts = $data['COUNT(grav)'];
													$nb_accidents += $data['COUNT(grav)'];
										break;			
										default:	$nb_accidents += $data['COUNT(grav)'];
										break;
									}	
								}
								$result->closeCursor();										//End of the query processing
								 								
								$response[] = array('name' => "Nombre d'accidents", 'data' => array((int)$nb_accidents)); 
								$response[] = array('name' => "Nombre de morts", 'data' => array((int)$nb_morts));
								 
		break;
		case 'graphique_2' :	// Chart n°2 : Evolution over time of the number of road accidents
								if ($zone != "1000")	//If the selected area is not the entire France country
								{																					// SQL query that selects the number of accidents by month of each year, from the oldest to the earlier date
									$result = $db -> prepare("SELECT DATE_FORMAT(date_acc,'%b - %Y') as la_date, DATE_FORMAT(date_acc,'%Y - %m'), COUNT(*) 
															FROM `caracteristiques` WHERE dep = ? and date_acc BETWEEN ? and ? 
															GROUP BY DATE_FORMAT(date_acc,'%b - %Y'), DATE_FORMAT(date_acc,'%Y - %m') ORDER BY DATE_FORMAT(date_acc,'%Y - %m')");
									$elements = array($zone,$date_d,$date_f);	
								}
									
								else	//If the selected area is France
								{																					// Same query without 'dep' column filter (query on the entire France area)
									$result = $db -> prepare("SELECT DATE_FORMAT(date_acc,'%b - %Y') as la_date, DATE_FORMAT(date_acc,'%Y - %m'), COUNT(*) 
															FROM `caracteristiques` WHERE date_acc BETWEEN ? and ? 
															GROUP BY DATE_FORMAT(date_acc,'%b - %Y'), DATE_FORMAT(date_acc,'%Y - %m') ORDER BY DATE_FORMAT(date_acc,'%Y - %m')");
									$elements = array($date_d,$date_f);
								}
									
								try
								{
									$result ->execute($elements);						// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user)
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}																		// will store the data needed for this chart in the right format (JSON, line 111) 
								$response = array(array('name' => "Nombre d'accidents", 'data' => array()),array());	//depending on the targeted chart to be used directly by Highcharts charts (our selected charts generator)	
																		//A second array is used for the x-axis data of the chart which will display the given month-year couple   			
								while($data = $result->fetch())											
									{
										$response[0]['data'][] = (int)$data['COUNT(*)'];			//number of accidents by month of each year
										$response[1][] = $data['la_date'];
									}
								$result->closeCursor();	
		break;
		case 'graphique_3' :	// Chart n°3 : Victims state after an accident by age group 
								if ($zone != "1000") //If the selected area is not the entire France country
								{																// Selects the gravity number and description of the accidents by age			
									$result = $db->prepare("SELECT grav,d_grav, COUNT(grav), age FROM `caracteristiques` c 
															JOIN `vehicules`v ON num_c = num_v JOIN `usagers` u ON num_u = num_v and u.num_veh = v.num_veh 
															JOIN `info_usg`iu ON num_iu = num_u and id_iu = id_u and iu.num_veh = u.num_veh 
															WHERE c.dep = ? and c.date_acc BETWEEN ? and ? GROUP BY age,grav,d_grav");
									$elements = array($zone,$date_d,$date_f);		
								}
								
								else //If the selected area is France
								{
									$result = $db->prepare("SELECT grav,d_grav, COUNT(grav), age FROM `caracteristiques` c 
															JOIN `vehicules`v ON num_c = num_v JOIN `usagers` u ON num_u = num_v and u.num_veh = v.num_veh 
															JOIN `info_usg`iu ON num_iu = num_u and id_iu = id_u and iu.num_veh = u.num_veh 
															WHERE c.date_acc BETWEEN ? and ? GROUP BY age,grav,d_grav");
									$elements = array($date_d,$date_f);	
								}
								
								try
								{
									$result ->execute($elements);		// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
								$name_1 = $name_2 = $name_3 = $name_4 = false;								//Set $name_X variables to false as long as the name hasn't been set in the corresponding $grav_X array
								$grav_1 = array('name' => '', 'data' => array(0,0,0,0,0));					//Create arrays to store the data from the database according to age group and gravity 
								$grav_2 = array('name' => '', 'data' => array(0,0,0,0,0));					// Each array for each gravity type (See source of the data)
								$grav_3 = array('name' => '', 'data' => array(0,0,0,0,0));					// All of this arrays contains another array where we store the data by age group 
								$grav_4 = array('name' => '', 'data' => array(0,0,0,0,0));					// The data will be filtered by age group and gravity in the end 
								while($data = $result->fetch())
								{														//Store the number of accidents by line in a an array depending on the age group and gravity number
									if($data['age'] > 0 AND $data['age'] < 14)			
									{
										switch($data['grav'])
										{
										case 1: $grav_1['data'][0]+=$data['COUNT(grav)'];	// Add in the array (which is itself in the 2 dimension array grav_X) the number of accidents of the corresponding age group and gravity 
												if(!$name_1)								//Proceed the same way for every if and switch statement in the Chart n°3
												{
													$grav_1['name'] = $data['d_grav'];		//When the description of the gravity is added to the array grav_X once, we set the variable name_X to true to explain we found it
													$name_1 = true;							// and do not need to affect the value every single time 
												}											
															
										break;
										case 2:	$grav_2['data'][0]+=$data['COUNT(grav)'];
												if(!$name_2)
												{
													$grav_2['name'] = $data['d_grav'];
													$name_2 = true;
												}
										break;
										case 3:	$grav_3['data'][0]+=$data['COUNT(grav)'];
												if(!$name_3)
												{
													$grav_3['name'] = $data['d_grav'];
													$name_3 = true;
												}
										break;
										case 4:	$grav_4['data'][0]+=$data['COUNT(grav)'];
												if(!$name_4)
												{
													$grav_4['name'] = $data['d_grav'];
													$name_4 = true;
												}
										break;
										}		
									}
										
									else if($data['age'] > 15 AND $data['age'] < 17)
									{
										switch($data['grav'])
										{
										case 1: $grav_1['data'][1]+=$data['COUNT(grav)'];
												if(!$name_1)
												{
													$grav_1['name'] = $data['d_grav'];
													$name_1 = true;
												}
										break;
										case 2:	$grav_2['data'][1]+=$data['COUNT(grav)'];
												if(!$name_2)
												{
													$grav_2['name'] = $data['d_grav'];
													$name_2 = true;
												}
										break;
										case 3:	$grav_3['data'][1]+=$data['COUNT(grav)'];
												if(!$name_3)
												{
													$grav_3['name'] = $data['d_grav'];
													$name_3 = true;
												}
										break;
										case 4:	$grav_4['data'][1]+=$data['COUNT(grav)'];
												if(!$name_4)
												{
													$grav_4['name'] = $data['d_grav'];
													$name_4 = true;
												}
										break;
										}		
									}
											
									else if($data['age'] > 18 AND $data['age'] < 24)
									{
										switch($data['grav'])
										{
										case 1: $grav_1['data'][2]+=$data['COUNT(grav)'];
												if(!$name_1)
												{
													$grav_1['name'] = $data['d_grav'];
													$name_1 = true;
												}
										break;
										case 2:	$grav_2['data'][2]+=$data['COUNT(grav)'];
												if(!$name_2)
												{
													$grav_2['name'] = $data['d_grav'];
													$name_2 = true;
												}
										break;
										case 3:	$grav_3['data'][2]+=$data['COUNT(grav)'];
												if(!$name_3)
												{
													$grav_3['name'] = $data['d_grav'];
													$name_3 = true;
												}
										break;
										case 4:	$grav_4['data'][2]+=$data['COUNT(grav)'];
												if(!$name_4)
												{
													$grav_4['name'] = $data['d_grav'];
													$name_4 = true;
												}
										break;
										}		
									}
											
									else if($data['age'] > 25 AND $data['age'] < 60)
									{
										switch($data['grav'])
										{
										case 1: $grav_1['data'][3]+=$data['COUNT(grav)'];
												if(!$name_1)
												{
													$grav_1['name'] = $data['d_grav'];
													$name_1 = true;
												}
										break;
										case 2:	$grav_2['data'][3]+=$data['COUNT(grav)'];
												if(!$name_2)
												{
													$grav_2['name'] = $data['d_grav'];
													$name_2 = true;
												}
										break;
										case 3:	$grav_3['data'][3]+=$data['COUNT(grav)'];
												if(!$name_3)
												{
													$grav_3['name'] = $data['d_grav'];
													$name_3 = true;
												}
										break;
										case 4:	$grav_4['data'][3]+=$data['COUNT(grav)'];
												if(!$name_4)
												{
													$grav_4['name'] = $data['d_grav'];
													$name_4 = true;
												}
										break;
										}		
									}
										
									else if($data['age'] > 60)
									{
										switch($data['grav'])
										{
										case 1: $grav_1['data'][4]+=$data['COUNT(grav)'];
												if(!$name_1)
												{
													$grav_1['name'] = $data['d_grav'];
													$name_1 = true;
												}
										break;
										case 2:	$grav_2['data'][4]+=$data['COUNT(grav)'];
												if(!$name_2)
												{
													$grav_2['name'] = $data['d_grav'];
													$name_2 = true;
												}
										break;
										case 3:	$grav_3['data'][4]+=$data['COUNT(grav)'];
												if(!$name_3)
												{
													$grav_3['name'] = $data['d_grav'];
													$name_3 = true;
												}
										break;
										case 4:	$grav_4['data'][4]+=$data['COUNT(grav)'];
												if(!$name_4)
												{
													$grav_4['name'] = $data['d_grav'];
													$name_4 = true;
												}
										break;
										}		
									}	
								}
								$result->closeCursor();											// will store the data needed for this chart in the right format (JSON, line 111)
								 											//depending on the targeted chart to be used directly by Highcharts charts (our selected charts generator)
								$response[] = $grav_1;											//Store these arrays in the response array (see line just above)
								$response[] = $grav_2;
								$response[] = $grav_3;
								$response[] = $grav_4;
								 
		break;							 
		case 'graphique_4' :	// Chart n°4: Categories of vehicules involved in accidents
								if ($zone != "1000")	//If the selected area is not the entire France country																																							
								{														//Select the number of accidents by vehicule category as well as its description
											$result = $db->prepare("SELECT d_catv, COUNT(catv) FROM `vehicules` v 
																	JOIN `caracteristiques` c ON c.num_c = v.num_v 
																	JOIN `info_veh` iv ON num_v = num_iv and v.num_veh = iv.num_veh
																	WHERE dep = ? and date_acc between ? and ? 
																	GROUP BY d_catv");
										$elements = array($zone,$date_d,$date_f);													
								}
								else //If the selected area is France (+ DOM-TOM)
								{
									$result = $db->prepare("SELECT d_catv, COUNT(catv) FROM `vehicules` v 
															JOIN `caracteristiques` c ON c.num_c = v.num_v 
															JOIN `info_veh` iv ON num_v = num_iv and v.num_veh = iv.num_veh
															WHERE date_acc between ? and ? 
															GROUP BY d_catv");
													$elements = array($date_d,$date_f);
													
								}
								try
								{
									$result ->execute($elements);		// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
								 
								$total = 0;								//Count the total number of accidents by adding up category's ones
								while($data = $result->fetch())
								{
									$response[] = array('name' => $data['d_catv'],'y' => ((int)$data['COUNT(catv)']));  //add the description and data to $response 
									$total += $data['COUNT(catv)'];
									//Ou echo directement
								}
								$result->closeCursor();
								for($i=0; $i< count($response); $i++)
								{
									$response[$i]['y'] = round($response[$i]['y']*100/$total,2);					//Replace the number of accidents by the rate (in %) using the $total variable
								}
								 

		break;
		case 'graphique_5' :	// Chart n°5: The different obstacles hit in road accidents (in number)
								if ($zone != "1000")	//If the selected area is not the entire France country												
								{																	//SQL query that selects the number of accidents by fixed obstacles hit(tree,pole,...) (see source or info_veh table)
											$result = $db->prepare("SELECT d_obs, COUNT(num_v) FROM `caracteristiques` c
																	JOIN `vehicules` v ON c.num_c = v.num_v 
																	JOIN `info_veh` iv ON num_iv = num_v and iv.num_veh = v.num_veh
																	WHERE dep = ? and obs IN (1,2,3,8)					
														and obs IS NOT NULL and d_obs IS NOT NULL and c.date_acc between ? and ? GROUP BY d_obs");
										$elements = array($zone,$date_d,$date_f);												
								}
								else //If the selected area is France
								{
									$result = $db->prepare("SELECT d_obs, COUNT(num_v) FROM `caracteristiques` c 
														JOIN `vehicules` v ON c.num_c = v.num_v 
														JOIN `info_veh` iv ON num_iv = num_v and iv.num_veh = v.num_veh
														WHERE obs IN (1,2,3,8)
													and obs IS NOT NULL and d_obs IS NOT NULL and c.date_acc between ? and ? GROUP BY d_obs");
													$elements = array($date_d,$date_f);
											
								}
									
								try
								{
									$result ->execute($elements);			// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)													// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
								 
								while($data = $result->fetch())
								{
									$response[] = array('name' => $data['d_obs'],'data' => array(((int)$data['COUNT(num_v)'])));	//add the extracted data to $response
									//Ou echo directement
								}
								$result->closeCursor();
								
								if($zone != "1000")		//If the selected area is not the entire France country
								{
																						//SQL query that selects the number of accidents by moving obstacles hit(pedestrian and car)
									$result = $db->prepare("SELECT d_obsm, COUNT(num_v) FROM `caracteristiques` c 
															JOIN `vehicules` v ON c.num_c = v.num_v 
															JOIN `info_veh` iv ON num_iv = num_v and iv.num_veh = v.num_veh
															 WHERE dep = ? and obsm IN (1,2) and c.date_acc between ? and ? GROUP BY d_obsm");
									$elements = array($zone,$date_d,$date_f);
								}
								else
								{
									$result = $db->prepare("SELECT d_obsm, COUNT(num_v) FROM `caracteristiques` c
															JOIN `vehicules` v ON c.num_c = v.num_v 
															JOIN `info_veh` iv ON num_iv = num_v and iv.num_veh = v.num_veh
															 WHERE obsm IN (1,2) and c.date_acc between ? and ? GROUP BY d_obsm");
									$elements = array($date_d,$date_f);
								}
								try
								{
									$result ->execute($elements);			// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
								while($data = $result->fetch())
								{
									$response[] = array('name' => $data['d_obsm'],'data' => array(((int)$data['COUNT(num_v)']))); //add the extracted data to $response
								}
								$result->closeCursor();
								
								 
					

		break;
		case 'graphique_6' :	//Chart n°6:  Accidents rate depending on the weather during the accidents
								if ($zone != "1000") //If the selected area is not the entire France country
								{
										$elements = array($zone,$date_d,$date_f);		//SQL query : Select the description and the number of accidents sorted by weather type (atm in the query)  
										$result = $db->prepare("SELECT COUNT(atm) AS group_atm,d_atm FROM `caracteristiques` 
																JOIN `info_carac` ON num_ic = num_c 	
																WHERE d_atm IS NOT NULL and dep = ? and date_acc 
																BETWEEN ? and ? GROUP BY atm,d_atm");
								}
									
								else			//If the selected area is the entire France country
								{
									$elements = array($date_d,$date_f);
									$result = $db->prepare("SELECT COUNT(atm) AS group_atm,d_atm FROM `caracteristiques`
															JOIN `info_carac` ON num_ic = num_c 
																WHERE d_atm IS NOT NULL and date_acc 
																BETWEEN ? and ? GROUP BY atm,d_atm");		
								}

								try
								{
									$result ->execute($elements);				// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
									
								$total = 0;
								$atm = array();
								while($data = $result->fetch())
								{
									$atm[] = array('desc' => $data['d_atm'],'compteur' => $data['group_atm']); 		// Add the extracted data (number and description) in an array
									$total += $data['group_atm'];													// sorted by weather type
								}
								$result->closeCursor();
								$rate = array();
								 
								for($i = 0; $i < count($atm); $i++)
								{
									
									$rate[$i] = round($atm[$i]['compteur'] * 100 /$total,2);						// Calculate the rate of accidents of each weather type
									$response[] = array('name' => $atm[$i]['desc'], 'y' => $rate[$i]);				// Change the number of accidents by the rate of accidents
								}
								 
		break;
		case 'graphique_7' :	//Chart n°7: Accidents rate depending on the luminosity/light during the accidents
								if ($zone != "1000") //If the selected area is not the entire France country
								{
										$elements = array($zone,$date_d,$date_f);  // SQL query : Selects the description and the number of accidents sorted by luminosity
										$result = $db->prepare("SELECT d_lum,COUNT(*) as number FROM `caracteristiques` c JOIN info_carac ON num_c = num_ic WHERE dep = ? and date_acc between ? and ?  GROUP BY d_lum");
								}
									
								else			//If the selected area is the entire France country
								{
									$elements = array($date_d,$date_f);
									$result = $db->prepare("SELECT d_lum,COUNT(*) as number FROM `caracteristiques` c JOIN info_carac ON num_c = num_ic WHERE date_acc between ? and ? GROUP BY d_lum");		
								}

								try
								{
									$result ->execute($elements);				// Execute the prepared query just above with the corresponding $element array (depending on the $zone variable : the input of the user )
								}
								catch(PDOException $e)																							// Display error if the connection fails 
								{
									echo 'Échec de la connexion à la base de données<br/>';
									echo 'Error : '.$e->getMessage().'<br />';
									echo 'N° : '.$e->getCode();
									exit();
								}
									
								$total = 0;
								$lum = array();
								while($data = $result->fetch())
								{
									$lum[] = array('desc' => $data['d_lum'],'num' => $data['number']); //Store the data extracted in an array 
									$total += $data['number'];									//Adding up for every luminosity type to get the total
								}
								$result->closeCursor();
								$rate = array();
								 
								for($i = 0; $i < count($lum); $i++)
								{
										$rate[$i] = round($lum[$i]['num'] * 100 /$total,2);				// Calculate the rate of accidents of each luminosity type
									$response[] = array('name' => $lum[$i]['desc'], 'y' => $rate[$i]);
								}							 
	}
$response = json_encode($response, JSON_UNESCAPED_UNICODE);		//Encode our array in JSON with special characters ("é,è,ê,à" for example) taken into account
echo $response;
?>